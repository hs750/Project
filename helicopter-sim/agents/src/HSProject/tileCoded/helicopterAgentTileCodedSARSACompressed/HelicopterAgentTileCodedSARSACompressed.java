package HSProject.tileCoded.helicopterAgentTileCodedSARSACompressed;

import org.rlcommunity.rlglue.codec.types.Action;
import org.rlcommunity.rlglue.codec.types.Observation;
import org.rlcommunity.rlglue.codec.util.AgentLoader;

import HSProject.tileCoded.TileCodedAgentSARSA;

/**
 * An experiment implementing SARSA. The random actions are selected with a
 * normal distribution around 0 rather than a uniform distribution.
 * 
 * @author harrison
 *
 */
public class HelicopterAgentTileCodedSARSACompressed extends TileCodedAgentSARSA {
	private double width;

	public HelicopterAgentTileCodedSARSACompressed() {

		int numTiles = getConfig().getInt("stateTiles");
		int numVariables = 12;
		int numTilings = getConfig().getInt("stateTilings");
		double[] statesMin = { -5, -5, -5, -20, -20, -20, -12.566, -12.566, -12.566, -1, -1, -1 };
		double[] statesMax = { 5, 5, 5, 20, 20, 20, 12.566, 12.566, 12.566, 1, 1, 1 };

		initialiseStateTiling(numVariables, statesMin, statesMax, numTiles, numTilings);
		
		width = getConfig().getDouble("noise");
		System.out.println("Width=" + width);
		
		numTiles = getConfig().getInt("actionTiles");
		numVariables = 4;
		numTilings = getConfig().getInt("actionTilings");
		double[] actionsMin = { -width, -width, -width, -width };
		double[] actionsMax = { width, width, width, width };

		initialiseActionTiling(numVariables, actionsMin, actionsMax, numTiles, numTilings);

		
	}

	/**
	 * A random action generated by a normal distribution about 0.
	 */
	@Override
	protected Action randomAction(Observation o) {
		Action a = new Action(0, 4);

		a.doubleArray[0] = (randGenerator.nextDouble() * (width * 2)) - width;
		a.doubleArray[1] = (randGenerator.nextDouble() * (width * 2)) - width;
		a.doubleArray[2] = (randGenerator.nextDouble() * (width * 2)) - width;
		a.doubleArray[3] = (randGenerator.nextDouble() * (width * 2)) - width;

		return a;

	}

	public static void main(String[] args) {
		AgentLoader L = new AgentLoader(new HelicopterAgentTileCodedSARSACompressed());
		L.run();
	}
}
